type Factory_CollectionDeployed {
  id: ID!
  tokenAddress: String!
  owner: String!
  isERC1155: Boolean!
  name: String!
  symbol: String!
  uri: String!
}

type SokosERC721_Transfer {
  id: ID!
  from: String!
  to: String!
  tokenId: BigInt!
}

type Collection @index(fields: ["contractAddress", "owner"]) {
  id: ID!
  contractAddress: String!
  name: String!
  symbol: String!
  uri: String!
  isERC1155: Boolean!
  nfts: [Nft!]! @derivedFrom(field: "collection")
  owner: Account!
}

type Nft {
  id: ID!
  tokenId: BigInt!
  owner: Account! @index
  collection: Collection! @index
  tokenUrl: String!
  image: String!
  name: String!
  description: String!
  isPhygital: Boolean!
  standard: String!
  supply: String!
  attributes: String!
}

type Account {
  id: ID!
}

# type Nftcollection @entity {
#   id: ID!
#   contractAddress: String!
#   name: String
#   symbol: String
#   maxSupply: BigInt
#   currentSupply: Int!
#   tokens: [Token!]! @derivedFrom(field: "collection")
# }

# type User @entity {
#   id: ID!
#   tokens: [Token!]! @derivedFrom(field: "owner")
# }

# type Token @entity {
#   id: ID!
#   tokenId: BigInt!
#   collection: Nftcollection!
#   owner: User!
#   metadata: Metadata @derivedFrom(field: "token_id")
# }

# type Metadata @entity {
#   id: ID!
#   token_id: String!
#   name: String!
#   description: String!
#   image: String!
#   attributes: [Attribute!]! @derivedFrom(field: "metadata_id")
# }

# type Attribute @entity {
#   id: ID!
#   metadata_id: String!
#   trait_type: String!
#   value: String!
# }
